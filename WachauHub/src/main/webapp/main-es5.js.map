{"version":3,"sources":["src/app/app.component.html","src/app/dialog/dialog.component.html","src/app/home/home.component.html","src/app/map/map.component.html","src/app/nav/nav.component.html","src/app/picture/picture.component.html","src/app/profile/profile.component.html","src/app/search-results/search-results.component.html","src/app/search/search.component.html","src/app/tables/dataset-table/dataset-table.component.html","src/app/tables/event-table/event-table.component.html","src/app/tables/geospatial-table/geospatial-table.component.html","src/app/tables/map-table/map-table.component.html","src/app/tables/species-map-table/species-map-table.component.html","src/app/tables/taxonomy-table/taxonomy-table.component.html","node_modules/tslib/tslib.es6.js","src/$_lazy_route_resource lazy namespace object","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/dialog/dialog.component.css","src/app/dialog/dialog.component.ts","src/app/home/home.component.css","src/app/home/home.component.ts","src/app/map/map.component.css","src/app/map/map.component.ts","src/app/models/Species.ts","src/app/models/Taxon.ts","src/app/nav/nav.component.css","src/app/nav/nav.component.ts","src/app/nav/nav.service.ts","src/app/picture/picture.component.css","src/app/picture/picture.component.ts","src/app/profile/profile.component.css","src/app/profile/profile.component.ts","src/app/search-results/search-results.component.css","src/app/search-results/search-results.component.ts","src/app/search/search.component.css","src/app/search/search.component.ts","src/app/services/geojson.service.ts","src/app/services/interaction.service.ts","src/app/services/record-req.service.ts","src/app/tables/dataset-table/dataset-table-datasource.ts","src/app/tables/dataset-table/dataset-table.component.css","src/app/tables/dataset-table/dataset-table.component.ts","src/app/tables/event-table/event-table-datasource.ts","src/app/tables/event-table/event-table.component.css","src/app/tables/event-table/event-table.component.ts","src/app/tables/geospatial-table/geospatial-table-datasource.ts","src/app/tables/geospatial-table/geospatial-table.component.css","src/app/tables/geospatial-table/geospatial-table.component.ts","src/app/tables/map-table/map-table-datasource.ts","src/app/tables/map-table/map-table.component.css","src/app/tables/map-table/map-table.component.ts","src/app/tables/species-map-table/species-map-table-datasource.ts","src/app/tables/species-map-table/species-map-table.component.css","src/app/tables/species-map-table/species-map-table.component.ts","src/app/tables/taxonomy-table/taxonomy-table-datasource.ts","src/app/tables/taxonomy-table/taxonomy-table.component.css","src/app/tables/taxonomy-table/taxonomy-table.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-nav></app-nav>\\r\\n<app-picture></app-picture>\\r\\n<section>\\r\\n  <router-outlet></router-outlet>\\r\\n</section>\\r\\n\"","export default \"<p>dialog works!</p>\\n\"","export default \"<div class=\\\"container my-4\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"width: 1500px;\\\">\\r\\n    <div class=\\\"col-12 col-md-6\\\">\\r\\n      <h5>Willkommen beim Wachau-Hub – dem Biodiversitätsportal für die Wachau!</h5>\\r\\n      <p>Hier finden Sie Informationen zur Artenvielfalt in der Weltkulturerbe-Region, entdecken Sie diverse Tiere, Pflanzen und Pilze.</p>\\r\\n      <p>Der Wachau-Hub wurde im Zuge eines Abschlussprojekts der HTL Krems 2019/2020 erstellt und gehört zum Biodiversitäts-Atlas Österreich. Die Funddaten werden vom Biodiversitäts-Atlas Österreich bezogen und laufend um neue Beobachtungen ergänzt.</p>\\r\\n      <p>Der Wachau-Hub wie auch der Biodiversitäts-Atlas basieren auf der Open-Source Softwarearchitektur des Atlas of Living Australia – der nationalen Biodiversitätsdatenbank von Australien</p>\\r\\n      <p>Viel Vergnügen beim Entdecken der Vielfalt!</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6\\\">\\r\\n      ​<picture>\\r\\n        <img src=\\\"images/schmetterling.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Bildunterschrift\\\" style=\\\"width: 400px; padding-left:100px;\\\">\\r\\n      </picture>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container my-4\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"width: 1500px;\\\">\\r\\n        <div class=\\\"col-12 h-display--flex\\\">\\r\\n            <map-table class=\\\"table\\\"></map-table>\\r\\n            <app-species-map-table class=\\\"speciestable\\\" data-source=\\\"speciesTableData\\\" style=\\\"padding-right: 100px;\\\"></app-species-map-table>\\r\\n            <div id=\\\"mapbox\\\" class=\\\"map\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<header>\\n  <div class=\\\"inside-header\\\">\\n    <div class=\\\"logo-container\\\">\\n      <a routerLink=\\\"/\\\">\\n        <img src=\\\"images/Logo-Biodiversitaets-Atlas.png\\\" class=\\\"img-fluid\\\" width=\\\"230\\\"/>\\n      </a>\\n    </div>\\n    <nav>\\n      <ul>\\n        <li><a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['home']\\\">Home</a></li>\\n        <li><a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['search']\\\">Suche</a></li>\\n        <li><a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['map']\\\">Map</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n</header>\\n\"","export default \"<ngb-carousel *ngIf=\\\"images\\\">\\n  <ng-template ngbSlide>\\n    <div class=\\\"picsum-img-wrapper\\\">\\n      <img [src]=\\\"images[0]\\\">\\n    </div>\\n  </ng-template>\\n  <ng-template ngbSlide>\\n    <div class=\\\"picsum-img-wrapper\\\">\\n      <img [src]=\\\"images[1]\\\">\\n    </div>\\n  </ng-template>\\n</ngb-carousel>\\n\\n<div class=\\\"stripe\\\"></div>\\n\"","export default \"<div class=\\\"container my-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 col-md-6\\\" style=\\\"height: 300px;\\\">\\r\\n        <div id=\\\"mapbox\\\" class=\\\"mapbox\\\" style=\\\"height: 100%;\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 col-md-6\\\">\\r\\n        <div class=\\\"table-div\\\">\\r\\n          <h4>Datensatz</h4>\\r\\n          <app-dataset-table class=\\\"table\\\"></app-dataset-table>\\r\\n          <h4>Ereignis</h4>\\r\\n          <app-event-table class=\\\"table\\\"></app-event-table>\\r\\n          <h4>Taxonomie</h4>\\r\\n          <app-taxonomy-table class=\\\"table\\\"></app-taxonomy-table>\\r\\n          <h4>Geospatial</h4>\\r\\n          <app-geospatial-table class=\\\"table\\\"></app-geospatial-table>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<head>\\n  <title>Bootstrap Example</title>\\n  <meta charset=\\\"utf-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\\\">\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\\\"></script>\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\\\"></script>\\n</head>\\n\\n<div class=\\\"container-fluid container\\\">\\n  <div class=\\\"row justify-content-center\\\" style=\\\"height: 20%;\\\">\\n    <div class=\\\"col-sm-9\\\" style=\\\"background-color:lightgray; border: 1px solid darkgrey\\\">\\n      <div class=\\\"col-sm-9\\\" style=\\\"height: 30%; margin-top: 50px;\\\">\\n        <input type=\\\"text\\\" value=\\\"{{searched}}\\\" class=\\\"search-input\\\" style=\\\"height: 70%; width: 75%;\\\" #input>\\n        <button style=\\\"height: 70%; width: 15%; margin-left: 3px;\\\" (click)=\\\"search(input.value)\\\">Suche</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\" style=\\\"height: 80%;\\\">\\n    <div class=\\\"col-sm-9\\\" style=\\\"background-color:white; border: 1px solid darkgrey\\\">\\n      <mat-list>\\n        <ng-container *ngFor=\\\"let species of speciesList | slice: lowValue : highValue\\\">\\n          <mat-list-item style=\\\"margin-left: 5%;\\\">\\n            <p mat-line style=\\\"font-weight:bold;\\\">{{species.scientificName}} | {{species.vernacularName}}</p>\\n            <p mat-line>{{species.dataResourceUid}}</p>\\n            <button (click)=\\\"showProfile(species.uuid)\\\" style=\\\"float: right; margin-top: 5%; margin-right: 5%;\\\">mehr</button>\\n           </mat-list-item>\\n          <mat-divider></mat-divider>\\n          </ng-container>\\n      </mat-list>\\n    </div>\\n      <mat-paginator style=\\\"height: 7%; float: right;\\\" [length]=\\\"speciesList.length\\\" [pageSize]=\\\"pageSize\\\"\\n      (page)=\\\"getPaginatorData($event)\\\">\\n      </mat-paginator>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container my-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"search-input\\\" #input>\\r\\n      <input class=\\\"search-button\\\" type=\\\"image\\\" src=\\\"images/search.png\\\" (click)=\\\"searchEvent(input.value)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.description}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Value</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.value}}</td>\\n    </ng-container>\\n\\n   <!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr> -->\\n    <tr mat-header-row></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n<!--  <mat-paginator #paginator\\n      [length]=\\\"dataSource?.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator> -->\\n</div>\\n\"","export default \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.description}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Value</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.value}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n\"","export default \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.description}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Value</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.value}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n\"","export default \"<div class=\\\"mat-elevation-z8 map-table\\\">\\n  <table mat-table class=\\\"table\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <ng-container matColumnDef=\\\"group\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Group</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.group}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"speciesCount\\\" >\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Species Count</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.speciesCount}}</td>\\n    </ng-container>\\n\\n\\n    <!-- highlight the clicked row!! -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n    [ngClass]=\\\"{ 'selected': selection.isSelected(row)}\\\"\\n    (click)=\\\"selection.select(row)\\\"\\n     #selectedRow></tr>\\n  </table>\\n</div>\\n\"","export default \"<div class=\\\"mat-elevation-z8 map-table\\\">\\n  <table mat-table class=\\\"table\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"species\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Record</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.species}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"recordCount\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Record Count</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.recordCount}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; let i = index\\\" (click)=\\\"onRowClicked(row, i)\\\"></tr>\\n  </table>\\n</div>\\n\"","export default \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.description}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Value</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.value}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport { MapComponent } from './map/map.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SearchResultsComponent } from './search-results/search-results.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'search', component: SearchComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'map', component: MapComponent},\n  {path: 'profile/:uuid', component: ProfileComponent},\n  {path: 'searchResults/:searched', component: SearchResultsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  readonly ROOT_URL=\"localhost:8080\";\n\n  posts:any;\n\n  constructor(private http: HttpClient)\n  {}\n\n  getPosts()\n  {\n    this.posts=this.http.get(this.ROOT_URL);\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavComponent} from \"./nav/nav.component\";\r\nimport {NavService} from \"./nav/nav.service\";\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {LocationStrategy, PathLocationStrategy} from \"@angular/common\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport { PictureComponent } from './picture/picture.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MapTableComponent } from './tables/map-table/map-table.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { DatasetTableComponent } from './tables/dataset-table/dataset-table.component';\r\nimport { EventTableComponent } from './tables/event-table/event-table.component';\r\nimport { TaxonomyTableComponent } from './tables/taxonomy-table/taxonomy-table.component';\r\nimport { GeospatialTableComponent } from './tables/geospatial-table/geospatial-table.component';\r\nimport { SpeciesMapTableComponent } from './tables/species-map-table/species-map-table.component';\r\nimport { SearchResultsComponent } from './search-results/search-results.component';\r\nimport { MatListModule} from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    PictureComponent,\r\n    HomeComponent,\r\n    MapComponent,\r\n    MapTableComponent,\r\n    SearchComponent,\r\n    ProfileComponent,\r\n    DatasetTableComponent,\r\n    EventTableComponent,\r\n    TaxonomyTableComponent,\r\n    GeospatialTableComponent,\r\n    SpeciesMapTableComponent,\r\n    SearchResultsComponent,\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatListModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [{provide: LocationStrategy, useClass: PathLocationStrategy}, NavService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".table, .speciestable {\\r\\n    width: 25%;\\r\\n    margin-left: 0%;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.map {\\r\\n  width:40%;\\r\\n  height: 60%;\\r\\n  padding-left: 100px;\\r\\n  min-height: 400px;\\r\\n}\\r\\n\\r\\n.table {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n/* Media Query for mobile only */\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n    .table, .map, .speciestable{\\r\\n        width: 100%;\\r\\n    }\\r\\n    #mapbox {\\r\\n        min-height: 500px;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLGVBQWU7SUFDZixXQUFXO0FBQ2Y7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixpQkFBaUI7QUFDbkI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUEsZ0NBQWdDOztBQUNoQztJQUNJO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZSwgLnNwZWNpZXN0YWJsZSB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5tYXAge1xyXG4gIHdpZHRoOjQwJTtcclxuICBoZWlnaHQ6IDYwJTtcclxuICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDQwMHB4O1xyXG59XHJcblxyXG4udGFibGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLyogTWVkaWEgUXVlcnkgZm9yIG1vYmlsZSBvbmx5ICovXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgLnRhYmxlLCAubWFwLCAuc3BlY2llc3RhYmxle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gICAgI21hcGJveCB7XHJcbiAgICAgICAgbWluLWhlaWdodDogNTAwcHg7XHJcbiAgICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ɵLifecycleHooksFeature } from '@angular/core';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { RecordReqService } from '../services/record-req.service';\r\nimport { Species } from '../models/Species';\r\nimport { MapTableItem } from '../tables/map-table/map-table-datasource';\r\nimport { SpeciesMapTableItem } from '../tables/species-map-table/species-map-table-datasource';\r\nimport * as L from 'leaflet';\r\nimport { GeojsonService } from '../services/geojson.service';\r\n\r\n\r\ndeclare var ol: any;\r\ndeclare var globmap: any;\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\nexport class MapComponent implements OnInit {\r\n  constructor(private service: RecordReqService, private geojsonService: GeojsonService) {}\r\n\r\n  data: any;\r\n  map: any;\r\n\r\n  featureCollection = [];\r\n\r\n  latitude: number = 48.40914;\r\n  longitude: number = 15.612974;\r\n\r\n  // map: any;\r\n\r\n  ngOnInit() {\r\n\r\n    // Vom Service die Daten holen und in einer Liste speichern\r\n    this.initMap();\r\n\r\n    var markerIcon = L.icon({\r\n      iconUrl: '/images/dot.png',\r\n\r\n      iconSize:     [15, 15], // size of the icon\r\n  });\r\n\r\n    this.service.getAllRecords().subscribe((data) => {\r\n      // console.log(data);\r\n      this.data = data;\r\n\r\n      this.data.occurrences.forEach(element => {\r\n        L.marker([element.decimalLatitude, element.decimalLongitude], {icon: markerIcon}).addTo(this.map)\r\n        .bindPopup(element.scientificName)\r\n        .openPopup();\r\n      });\r\n    });\r\n  }\r\n\r\n   private initMap() {\r\n    this.map = L.map('mapbox').setView([48.35422, 15.42558], 10);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n\r\n        const myStyle = {\r\n          \"color\": \"#786f6e\",\r\n          \"weight\": 3,\r\n          \"opacity\": 0.4\r\n      };\r\n\r\n    this.geojsonService.getGeoJson().subscribe(data => {\r\n          console.log(data);\r\n          L.geoJson(data, {style: myStyle}).addTo(this.map);\r\n      });\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { CheckboxRequiredValidator } from '@angular/forms';\r\n\r\nexport class Species {\r\n  dataProviderName: string;\r\n  dataResourceName: string;\r\n  dataResourceUid: string;\r\n  occurrenceId: number;\r\n  collector: string;\r\n  basisOfRecord: string;\r\n  occurrenceStatus: string;\r\n\r\n  eventDate: number;\r\n  datePrecision: string;\r\n\r\n  rawScientificName: string;\r\n  scientificName: string;\r\n  taxonRank: string;\r\n  vernacularName: string;\r\n  kingdom: string;\r\n  phylum: string;\r\n  classID: string;\r\n  order: string;\r\n  family: string;\r\n  genus: string;\r\n  genusId: number;\r\n  species: string;\r\n\r\n  decimalLatitude: number;\r\n  decimalLongitude: number;\r\n  geodeticDatum: string;\r\n\r\n  uuid: string;\r\n\r\n\r\n  constructor(speciesResponse: any, aufrufer: string) {\r\n    // schauen ob der wert überhaupt da ist, wenn nicht dann 0 bzw. leer setzten\r\n    if (aufrufer === 'profile' || aufrufer === 'searchResults' || aufrufer === 'SpeciesMapTable') {\r\n    this.dataProviderName = speciesResponse.dataProviderName;\r\n    this.dataResourceName = speciesResponse.dataRessourceName;\r\n    this.dataResourceUid = speciesResponse.dataResourceUid;\r\n    this.occurrenceId = speciesResponse.occurrenceID;\r\n    this.collector = speciesResponse.collector;\r\n    this.basisOfRecord = speciesResponse.basisOfRecord;\r\n    this.occurrenceStatus = speciesResponse.occurrenceStatus;\r\n\r\n    this.eventDate = speciesResponse.eventDate;\r\n    this.datePrecision = speciesResponse.datePrecision;\r\n\r\n    this.rawScientificName = speciesResponse.raw_scientificName;\r\n    this.scientificName = speciesResponse.scientificName;\r\n    this.taxonRank = speciesResponse.taxonRank;\r\n    this.vernacularName = speciesResponse.vernacularName;\r\n    this.kingdom = speciesResponse.kingdom;\r\n    this.phylum = speciesResponse.phylum;\r\n    this.classID = speciesResponse.classs;\r\n    this.order = speciesResponse.order;\r\n    this.family = speciesResponse.family;\r\n    this.genus = speciesResponse.genus;\r\n    this.genusId = speciesResponse.genusId;\r\n    this.species = speciesResponse.species;\r\n\r\n    this.decimalLatitude = speciesResponse.decimalLatitude;\r\n    this.decimalLongitude = speciesResponse.decimalLongitude;\r\n    this.geodeticDatum = speciesResponse.geodeticDatum;\r\n\r\n    this.uuid = speciesResponse.uuid;\r\n    }\r\n\r\n    if (aufrufer === 'dataTable') {\r\n      this.dataProviderName = speciesResponse.processed.attribution.dataProviderName;\r\n      this.dataResourceName = speciesResponse.processed.attribution.dataResourceName;\r\n      this.dataResourceUid = speciesResponse.processed.attribution.dataProviderUid;\r\n      this.occurrenceId = speciesResponse.raw.occurrence.occurrenceID;\r\n      this.collector = speciesResponse.collector;\r\n      this.basisOfRecord = speciesResponse.processed.occurrence.basisOfRecord;\r\n      this.occurrenceStatus = speciesResponse.processed.occurrence.occurrenceStatus;\r\n    }\r\n\r\n    if (aufrufer === 'geoTable') {\r\n      this.decimalLatitude = speciesResponse.raw.location.decimalLatitude;\r\n      this.decimalLongitude = speciesResponse.raw.location.decimalLongitude;\r\n      this.geodeticDatum = speciesResponse.processed.location.geodeticDatum;\r\n    }\r\n\r\n    if (aufrufer === 'taxTable') {\r\n      this.scientificName = speciesResponse.processed.classification.scientificName;\r\n      this.taxonRank = speciesResponse.processed.classification.taxonRank;\r\n      this.vernacularName = speciesResponse.processed.classification.vernacularName;\r\n      this.kingdom = speciesResponse.processed.classification.kingdom;\r\n      this.phylum = speciesResponse.processed.classification.phylum;\r\n      this.classID = speciesResponse.processed.classification.classs;\r\n      this.order = speciesResponse.processed.classification.order;\r\n      this.family = speciesResponse.processed.classification.family;\r\n      this.genus = speciesResponse.processed.classification.genus;\r\n      this.genusId = speciesResponse.processed.classification.genusId;\r\n      this.species = speciesResponse.processed.classification.species;\r\n    }\r\n\r\n    if (aufrufer === 'eventTable') {\r\n      this.eventDate = speciesResponse.processed.event.eventDate;\r\n      this.datePrecision = speciesResponse.processed.event.datePrecision;\r\n    }\r\n\r\n    if (aufrufer === 'profile') {\r\n      this.decimalLatitude = speciesResponse.raw.location.decimalLatitude;\r\n      this.decimalLongitude = speciesResponse.raw.location.decimalLongitude;\r\n    }\r\n\r\n  }\r\n}\r\n","export class Taxon {\r\n   speciesGroup: string;\r\n   taxa: string[] = [];\r\n\r\n   constructor(taxonResponse: any) {\r\n     console.log(taxonResponse[1]);\r\n    this.speciesGroup = taxonResponse[1].speciesGroup;\r\n    taxonResponse[1].taxa.forEach(element => {\r\n      this.taxa.push(element.common);\r\n    });\r\n  }\r\n}\r\n\r\n","export default \".inside-header {\\n  max-width: 1140px;\\n  padding: 20px 0;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.logo-container {\\n  display: inline-block;\\n  max-width: 100%;\\n}\\nnav {\\n  margin-top: 55px;\\n  float: right;\\n  clear: right;\\n}\\nnav ul {\\n  list-style: none;\\n  margin: 0;\\n  padding-left: 0;\\n}\\nnav ul li {\\n  float: left;\\n  position: relative;\\n}\\nnav ul li a {\\n  color: #0a0a0a;\\n  padding-left: 25px;\\n  padding-right: 25px;\\n  font-size: 15px;\\n  line-height: 50px;\\n  font-weight: 500;\\n  text-transform: uppercase;\\n}\\nnav ul li a:hover {\\n  color: #e8402c;\\n  text-decoration: none;\\n}\\nnav ul li a.active {\\n  color: #e8402c;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixTQUFTO0VBQ1QsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxjQUFjO0VBQ2QscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmluc2lkZS1oZWFkZXIge1xuICBtYXgtd2lkdGg6IDExNDBweDtcbiAgcGFkZGluZzogMjBweCAwO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuLmxvZ28tY29udGFpbmVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5uYXYge1xuICBtYXJnaW4tdG9wOiA1NXB4O1xuICBmbG9hdDogcmlnaHQ7XG4gIGNsZWFyOiByaWdodDtcbn1cbm5hdiB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xufVxubmF2IHVsIGxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbm5hdiB1bCBsaSBhIHtcbiAgY29sb3I6ICMwYTBhMGE7XG4gIHBhZGRpbmctbGVmdDogMjVweDtcbiAgcGFkZGluZy1yaWdodDogMjVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbm5hdiB1bCBsaSBhOmhvdmVyIHtcbiAgY29sb3I6ICNlODQwMmM7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbm5hdiB1bCBsaSBhLmFjdGl2ZSB7XG4gIGNvbG9yOiAjZTg0MDJjO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  appTitle = 'myapp';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {publishReplay, refCount} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class NavService {\n\n  _navData: Observable<any>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getNavData(): Observable<any> {\n    if (!this._navData) {\n      this._navData = this.httpClient.get(environment.serverUrl + 'application')\n        .pipe(publishReplay(), refCount());\n    }\n    return this._navData;\n  }\n}\n","export default \"img{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\n.stripe{\\r\\n  background-color: #61963D;\\r\\n  width: 100%;\\r\\n  height: 10%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGljdHVyZS9waWN0dXJlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL3BpY3R1cmUvcGljdHVyZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1ne1xyXG4gIHdpZHRoOjEwMCU7XHJcbn1cclxuXHJcbi5zdHJpcGV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYxOTYzRDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-picture',\n  templateUrl: './picture.component.html',\n  styleUrls: ['./picture.component.css']\n})\nexport class PictureComponent implements OnInit {\n\n  images = [\"images/titelbild.png\", \"images/wein.jpg\"];\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Injectable} from '@angular/core';\nimport { RecordReqService } from '../services/record-req.service';\nimport { Species } from '../models/Species';\nimport { stringify } from 'querystring';\nimport { ActivatedRoute } from '@angular/router';\nimport {BehaviorSubject} from 'rxjs';\nimport * as L from 'leaflet';\nimport { GeojsonService } from '../services/geojson.service';\n\ndeclare var ol: any;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: RecordReqService, private route: ActivatedRoute, private geojsonService: GeojsonService) { }\n  latitude: number = 48.409140;\n  longitude: number = 15.612974;\n\n  map: any;\n  private uuidSource = new BehaviorSubject<string>('bca43e78-5869-41e7-9a04-d556b62a5258');\n  currentUuid = this.uuidSource.asObservable();\n  data: any;\n  speciesList: Species[] = [];\n\n  ngOnInit() {\n\n    const uuid = this.route.snapshot.paramMap.get('uuid');\n    console.log('Gesucht:' + uuid);\n    this.uuidSource.next(uuid);\n\n    this.service.getOneRecord(uuid).subscribe((data) => {\n      this.data = data;\n      const spec = new Species(data, 'profile');\n\n        this.initMap(spec);\n    });\n\n  }\n\n  private initMap(species) {\n    this.map = L.map('mapbox').setView([species.decimalLatitude, species.decimalLongitude], 10);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n\n        const myStyle = {\n          \"color\": \"#786f6e\",\n          \"weight\": 3,\n          \"opacity\": 0.4\n      };\n\n    this.geojsonService.getGeoJson().subscribe(data => {\n          console.log(data);\n          L.geoJson(data, {style: myStyle}).addTo(this.map);\n      });\n\n      var markerIcon = L.icon({\n        iconUrl: '/images/dot.png',\n        iconSize:     [15, 15], // size of the icon\n    });\n\n      L.marker([species.decimalLatitude, species.decimalLongitude], {icon: markerIcon}).addTo(this.map);\n\n  }\n\n}\n\nfunction buildMap(species){\n  const mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\n  // Map erstellen, Center in Spitz an der Donau\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoianVsaWEwNDEyIiwiYSI6ImNrNjExYTBkMDBjdjQzZm9ha3VnZHZ6NzQifQ.4Hw-RyHSXwM7oNDxDbcu7w';\n  const map = new mapboxgl.Map({\n    container: 'mapbox',\n    style: 'mapbox://styles/mapbox/streets-v11',\n    zoom: 11,\n    center: [species.decimalLongitude, species.decimalLatitude]\n  });\n    map.on('load', function() {\n      // Add zoom and rotation controls to the map. FUNKTIONIERT NICHT\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add resize for loaded map so it doesnt look broken ;)\n      map.resize();\n\n      /* Image: An image is loaded and added to the map. */\n      map.loadImage('images/dot.png', function(error, image) {\n        if (error) {\n          throw error;\n        }\n\n        // Marker zur Map hinzufügen\n        map.addImage('custom-marker', image);\n\n        map.addLayer({\n          id: 'markers',\n          type: 'symbol',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [\n                {\n                  type: 'Feature',\n                  properties: {\n                    description: '<strong>Krems an der Donau</strong>'\n                  },\n                  geometry: {\n                    type: 'Point',\n                    coordinates: [species.decimalLongitude, species.decimalLatitude]\n                  }\n                },\n              ]\n            }\n          },\n          layout: {\n            'icon-image': 'custom-marker'\n          }\n        });\n      });\n\n\n      // Wachau-Polygon zur Map hinzufügen\n      map.addSource('wachau', {\n        type: 'geojson',\n        // tslint:disable-next-line: max-line-length\n        data:\n          'https://sdi.noe.gv.at/at.gv.noe.geoserver/OGD/wfs?request=GetFeature&version=1.1.0&typeName=OGD:RRU_UNESCO&srsName=EPSG:4326&outputFormat=application/json'\n      });\n\n      map.addLayer({\n        id: 'maine',\n        type: 'line',\n        source: 'wachau',\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        paint: {\n          'line-color': '#888',\n          'line-width': 2\n        }\n      });\n    });\n\n}\n","export default \".container {\\r\\n  height: 700px;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n  height: 100%;;\\r\\n}\\r\\n\\r\\n.col {\\r\\n  height: 100%;\\r\\n  border:2px;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoLXJlc3VsdHMvc2VhcmNoLXJlc3VsdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osVUFBVTtFQUNWLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1yZXN1bHRzL3NlYXJjaC1yZXN1bHRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDcwMHB4O1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuXHJcbi5yb3cge1xyXG4gIGhlaWdodDogMTAwJTs7XHJcbn1cclxuXHJcbi5jb2wge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBib3JkZXI6MnB4O1xyXG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { RecordReqService } from '../services/record-req.service';\nimport { Species } from '../models/Species';\nimport {PageEvent} from '@angular/material';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private service: RecordReqService, private router: Router, public snackBar: MatSnackBar) { }\n  data: any;\n  speciesList: Species[] = [];\n  searched: any;\n\n  // Pagination\n  pageIndex:number = 0;\n  pageSize:number = 6;\n  lowValue:number = 0;\n  highValue:number = 7;\n\n  getPaginatorData(event) {\n    console.log(event);\n     if(event.pageIndex === this.pageIndex + 1){\n        this.lowValue = this.lowValue + this.pageSize;\n        this.highValue =  this.highValue + this.pageSize;\n       }\n    else if(event.pageIndex === this.pageIndex - 1){\n       this.lowValue = this.lowValue - this.pageSize;\n       this.highValue =  this.highValue - this.pageSize;\n      }\n       this.pageIndex = event.pageIndex;\n\n  }\n\n\n  ngOnInit() {\n    const searched = this.route.snapshot.paramMap.get('searched');\n    console.log('Gesucht:' + searched);\n    this.searched = searched;\n    this.search(this.searched);\n  }\n\n  public showProfile(uuid) {\n    this.router.navigate(['/profile', uuid]);\n  }\n\n  public search(searched) {\n    this.speciesList = [];\n    this.service.getRecordBySearch(searched).subscribe((data) => {\n      console.log(data);\n      this.data = data;\n\n      if (this.data.occurrences.length === 0) {\n        this.snackBar.open('Keine Ergebnisse gefunden', 'OK');\n      }\n      this.data.occurrences.forEach(element => {\n        const spec = new Species(element, 'searchResults');\n        this.speciesList.push(spec);\n      });\n\n    });\n  }\n}\n","export default \"input {\\r\\n  height: 50%;\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n.search-input {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.search-button {\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  margin-left: 1%;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuICBoZWlnaHQ6IDUwJTtcclxuICB3aWR0aDogNTAlO1xyXG59XHJcblxyXG4uc2VhcmNoLWlucHV0IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuLnNlYXJjaC1idXR0b24ge1xyXG4gIHdpZHRoOiAzMnB4O1xyXG4gIGhlaWdodDogMzJweDtcclxuICBtYXJnaW4tbGVmdDogMSU7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { RecordReqService } from '../services/record-req.service';\nimport { Species } from '../models/Species';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private service: RecordReqService, private router: Router) { }\n\n  data: any;\n  speciesList: Species[] = [];\n\n  ngOnInit() {\n  }\n\n  public searchEvent(searched) {\n    // foreach element alle variablen durchgehen und schauen ob sie diesen wert irgendwo beinhalten (achtung großkleinschreibung)\n    console.log('Es wurde gesucht:' + searched);\n    this.router.navigate(['/searchResults', searched]);\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeojsonService {\n\n  constructor(private http: HttpClient) {\n    this.getGeoJson().subscribe(data => {\n        console.log(data);\n    });\n}\n\npublic getGeoJson(): Observable<any> {\n  return this.http.get('https://sdi.noe.gv.at/at.gv.noe.geoserver/OGD/wfs?request=GetFeature&version=1.1.0&typeName=OGD:RRU_UNESCO&srsName=EPSG:4326&outputFormat=application/json');\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractionService {\n\n  private groupSource = new Subject<string>() ;\n  currentGroup = this.groupSource.asObservable();\n  constructor() { }\n\n  updateGroup(group: string) {\n  this.groupSource.next(group);\n  }\n\n  getGroup() {\n    return this.currentGroup;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordReqService {\n\n  readonly URL;\n\n  constructor(private http: HttpClient) {\n     this.URL = 'http://localhost:8080/data';\n   }\n\n\n   getAllRecords() {\n    return this.http.get(this.URL + '/records/all')\n   }\n\n   getOneRecord(uuid) {\n     console.log(uuid);\n     return this.http.get(this.URL + '/records/' + uuid);\n   }\n\n   /*getRecordCountforTaxon() {\n\n   }*/\n\n   getTaxonRecords(taxon) {\n    return this.http.get(this.URL + '/records/taxon/'+ taxon);\n   }\n\n   getRecordBySearch(searched) {\n    return this.http.get(this.URL + '/records/search/' + searched);\n   }\n\n   getWachauGrenzen() {\n     // tslint:disable-next-line: max-line-length\n     return this.http.get('https://sdi.noe.gv.at/at.gv.noe.geoserver/OGD/wfs?request=GetFeature&version=1.1.0&typeName=OGD:RRU_UNESCO&srsName=EPSG:4326&outputFormat=application/json');\n   }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProfileTableItem[] = [\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'}\n];\n\n/**\n * Data source for the DatasetTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DatasetTableDataSource extends DataSource<ProfileTableItem> {\n  data: ProfileTableItem[] = EXAMPLE_DATA;\n  tabledata: ProfileTableItem[];\n\n  speciesdata: any;\n  species: Species;\n\n  constructor(private tableData: ProfileTableItem[]) {\n    super();\n    this.tableData = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProfileTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n\n    const dataMutations = [\n      observableOf(this.tableData)\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.tableData;\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n}\n\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL2RhdGFzZXQtdGFibGUvZGF0YXNldC10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvdGFibGVzL2RhdGFzZXQtdGFibGUvZGF0YXNldC10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { DatasetTableDataSource} from './dataset-table-datasource';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { ProfileComponent } from 'src/app/profile/profile.component';\n\n@Component({\n  selector: 'app-dataset-table',\n  templateUrl: './dataset-table.component.html',\n  styleUrls: ['./dataset-table.component.css']\n})\nexport class DatasetTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatTable, {static: false}) table: MatTable<ProfileTableItem>;\n  dataSource: DatasetTableDataSource;\n  constructor(private service: RecordReqService, private data: ProfileComponent) { }\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['description', 'value'];\n  tableData: ProfileTableItem[];\n\n  uuid: any;\n  speciesdata: any;\n  species: Species;\n\n  ngOnInit() {\n    this.data.currentUuid.subscribe(uuid => this.uuid = uuid);\n    console.log('Empfangene Uuid:' + this.uuid);\n\n    this.service.getOneRecord(this.uuid\n      ).subscribe((data) => {\n      // console.log(data);\n      this.speciesdata = data;\n        console.log(this.speciesdata);\n        const spec = new Species(this.speciesdata, 'dataTable');\n        this.species = spec;\n\n      this.tableData = fillTable(this.species);\n      this.dataSource = new DatasetTableDataSource(this.tableData);\n      console.log('Datasource:');\n      console.log(this.dataSource);\n      this.table.dataSource = this.dataSource;\n    });\n    this.dataSource = new DatasetTableDataSource(this.tableData);\n  }\n\n  ngAfterViewInit() {\n  }\n\n}\n\nfunction fillTable(species) {\n  const data: ProfileTableItem[] = [];\n\n  data.push({description: 'Datenpartner', value: species.dataProviderName});\n  data.push({description: 'Datenressourcen Name', value: species.dataResourceName});\n  data.push({description: 'Datenressourcen ID',  value: species.dataResourceUid});\n  data.push({description: 'Vorkommens-ID',  value: species.occurrenceId});\n  data.push({description: 'Beobachter',  value: 'unbekannt'});\n  data.push({description: 'Basis der Aufzeicnnung',  value: species.basisOfRecord});\n  data.push({description: 'Vorkommensstatus',  value: species.occurrenceStatus});\n\n  return data;\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { Species } from 'src/app/models/Species';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\n\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProfileTableItem[] = [\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'}\n];\n\n\n/**\n * Data source for the EventTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class EventTableDataSource extends DataSource<ProfileTableItem> {\n  data: ProfileTableItem[] = EXAMPLE_DATA;\n  tabledata: ProfileTableItem[];\n\n  speciesdata: any;\n  species: Species;\n\n  constructor(private tableData: ProfileTableItem[]) {\n    super();\n    this.tableData = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProfileTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n\n    const dataMutations = [\n      observableOf(this.tableData)\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.tableData;\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n}\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL2V2ZW50LXRhYmxlL2V2ZW50LXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC90YWJsZXMvZXZlbnQtdGFibGUvZXZlbnQtdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { EventTableDataSource} from './event-table-datasource';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { Species } from 'src/app/models/Species';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { ProfileComponent } from 'src/app/profile/profile.component';\n\n@Component({\n  selector: 'app-event-table',\n  templateUrl: './event-table.component.html',\n  styleUrls: ['./event-table.component.css']\n})\nexport class EventTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatTable, {static: false}) table: MatTable<ProfileTableItem>;\n  dataSource: EventTableDataSource;\n\n  constructor(private service: RecordReqService, private data: ProfileComponent) { }\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['description', 'value'];\n  tableData: ProfileTableItem[];\n\n  uuid: any;\n  speciesdata: any;\n  species: Species;\n\n  ngOnInit() {\n    this.data.currentUuid.subscribe(uuid => this.uuid = uuid);\n    console.log('Empfangene Uuid:' + this.uuid);\n\n    this.service.getOneRecord(this.uuid).subscribe((data) => {\n      // console.log(data);\n      this.speciesdata = data;\n\n      const spec = new Species(this.speciesdata, 'eventTable');\n      this.species = spec;\n\n      this.tableData = fillTable(this.species);\n      this.dataSource = new EventTableDataSource(this.tableData);\n      console.log('Datasource:');\n      console.log(this.dataSource);\n      this.table.dataSource = this.dataSource;\n    });\n    this.dataSource = new EventTableDataSource(this.tableData);\n  }\n\n  ngAfterViewInit() {\n  }\n}\n\nfunction fillTable(species) {\n  const data: ProfileTableItem[] = [];\n\n  data.push({description: 'Aufzeichnungsdatum', value: species.eventDate});\n  data.push({description: 'Datumsgenauigkeit',  value: species.datePrecision});\n\n  return data;\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\n\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProfileTableItem[] = [\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'}\n];\n/**\n * Data source for the GeospatialTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class GeospatialTableDataSource extends DataSource<ProfileTableItem> {\n  data: ProfileTableItem[] = EXAMPLE_DATA;\n  tabledata: ProfileTableItem[];\n\n  speciesdata: any;\n  species: Species;\n\n  constructor(private tableData: ProfileTableItem[]) {\n    super();\n    this.tableData = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProfileTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n\n    const dataMutations = [\n      observableOf(this.tableData)\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.tableData;\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n}\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL2dlb3NwYXRpYWwtdGFibGUvZ2Vvc3BhdGlhbC10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvdGFibGVzL2dlb3NwYXRpYWwtdGFibGUvZ2Vvc3BhdGlhbC10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { GeospatialTableDataSource} from './geospatial-table-datasource';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { ProfileComponent } from 'src/app/profile/profile.component';\n\n@Component({\n  selector: 'app-geospatial-table',\n  templateUrl: './geospatial-table.component.html',\n  styleUrls: ['./geospatial-table.component.css']\n})\nexport class GeospatialTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatTable, {static: false}) table: MatTable<ProfileTableItem>;\n  dataSource: GeospatialTableDataSource;\n  constructor(private service: RecordReqService, private data: ProfileComponent) { }\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['description', 'value'];\n  tableData: ProfileTableItem[];\n\n  uuid: any;\n  speciesdata: any;\n  species: Species;\n\n  ngOnInit() {\n    this.data.currentUuid.subscribe(uuid => this.uuid = uuid);\n    console.log('Empfangene Uuid:' + this.uuid);\n\n    this.service.getOneRecord(this.uuid).subscribe((data) => {\n      // console.log(data);\n      this.speciesdata = data;\n\n      const spec = new Species(this.speciesdata, 'geoTable');\n        this.species = spec;\n\n      this.tableData = fillTable(this.species);\n      this.dataSource = new GeospatialTableDataSource(this.tableData);\n      console.log('Datasource:');\n      console.log(this.dataSource);\n      this.table.dataSource = this.dataSource;\n    });\n    this.dataSource = new GeospatialTableDataSource(this.tableData);\n  }\n\n  ngAfterViewInit() {\n  }\n}\n\nfunction fillTable(species) {\n  const data: ProfileTableItem[] = [];\n\n  data.push({description: 'Longitude', value: species.decimalLongitude});\n  data.push({description: 'Latitude',  value: species.decimalLatitude});\n  data.push({description: 'Geodätisches Datum',  value: species.geodeticDatum});\n\n  return data;\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface MapTableItem {\n  group: string;\n  speciesCount: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: MapTableItem[] = [\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Tiere', speciesCount: '1000'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'},\n  {group: 'Pflanzen', speciesCount: '50'}\n];\n\n/**\n * Data source for the MapTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class MapTableDataSource extends DataSource<MapTableItem> {\n  data: MapTableItem[] = EXAMPLE_DATA;\n  sort: MatSort;\n\n  tabledata: MapTableItem[];\n\n  constructor(private tableData: MapTableItem[]) {\n    super();\n    this.tableData = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<MapTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.tableData),\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getSortedData([...this.tableData]);\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: MapTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'group': return compare(a.group, b.group, isAsc);\n        case 'speciesCount': return compare(+a.speciesCount, +b.speciesCount, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n.map-table{\\n  width: 100%;\\n  margin-right: 0%;\\n  text-align: center;\\n  box-shadow: none;\\n  border-left: 1px solid #dee2e6;\\n  border-right: 1px solid #dee2e6;\\n  overflow-y: scroll;\\n  max-height: 700px;\\n}\\n\\nth {\\n  vertical-align: middle!important;\\n}\\n\\ntd {\\n  padding: 10px!important;\\n}\\n\\n.mat-row.selected {\\n  background: rgb(161, 147, 147);\\n}\\n\\n.mat-row:hover {\\n  border-color: gray;\\n  background: rgb(161, 147, 147);\\n}\\n\\n.row {\\n  width: 1500px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL21hcC10YWJsZS9tYXAtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQiw4QkFBOEI7RUFDOUIsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvdGFibGVzL21hcC10YWJsZS9tYXAtdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXAtdGFibGV7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tcmlnaHQ6IDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RlZTJlNjtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2RlZTJlNjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBtYXgtaGVpZ2h0OiA3MDBweDtcbn1cblxudGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlIWltcG9ydGFudDtcbn1cblxudGQge1xuICBwYWRkaW5nOiAxMHB4IWltcG9ydGFudDtcbn1cblxuLm1hdC1yb3cuc2VsZWN0ZWQge1xuICBiYWNrZ3JvdW5kOiByZ2IoMTYxLCAxNDcsIDE0Nyk7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kOiByZ2IoMTYxLCAxNDcsIDE0Nyk7XG59XG5cbi5yb3cge1xuICB3aWR0aDogMTUwMHB4O1xufVxuIl19 */\"","import { AfterViewInit, Component, OnInit, ViewChild, Injectable } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { MapTableDataSource, MapTableItem } from './map-table-datasource';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { Species } from 'src/app/models/Species';\nimport {BehaviorSubject} from 'rxjs';\nimport { element } from 'protractor';\nimport { Taxon } from 'src/app/models/Taxon';\nimport * as subgroups from 'src/TaxonGroup/subgroups.json';\nimport { InteractionService } from 'src/app/services/interaction.service';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'map-table',\n  templateUrl: './map-table.component.html',\n  styleUrls: ['./map-table.component.css']\n})\n\n@Injectable()\nexport class MapTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n  @ViewChild(MatTable, {static: false}) table: MatTable<MapTableItem>;\n  dataSource: MapTableDataSource;\n\n  constructor(private service: RecordReqService, private intService: InteractionService) { }\n  selection = new SelectionModel<MapTableItem>(false, null);\n  currentGroup = 'all';\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['group', 'speciesCount'];\n  tableData: MapTableItem[] = [];\n\n  taxonData: any;\n  taxonGroup: Taxon[] = [];\n\n  recordData: any;\n  recordCountData: any;\n  recordCountData2: any;\n  allRecordCount: any = 10000;\n\n  ngOnInit() {\n        this.tableData.push({group: 'Alle', speciesCount: this.allRecordCount});\n        this.service.getAllRecords().subscribe((data) => {\n        this.recordData = data;\n        const count = this.recordData.totalRecords;\n        this.tableData[0].speciesCount = count;\n        this.dataSource = new MapTableDataSource(this.tableData);\n\n         this.dataSource.sort = this.sort;\n        this.table.dataSource = this.dataSource;\n        });\n        this.taxonData = subgroups.default;\n\n        this.selection.onChange.subscribe((a) =>\n        {\n            if (a.added[0])   // will be undefined if no selection\n            {\n              this.intService.updateGroup(a.added[0].group);\n              console.log(a.added[0].group);\n            }\n        });\n\n      Object.entries(this.taxonData).forEach(el => {\n        this.taxonGroup.push(new Taxon(el));\n      });\n      console.log(this.taxonGroup);\n\n       this.taxonGroup.forEach(el => {\n        this.service.getRecordBySearch(el.speciesGroup).subscribe((data) => {\n          this.recordCountData2 = data;\n          const count2 = this.recordCountData2.totalRecords;\n          this.tableData.push({group: el.speciesGroup, speciesCount: count2});\n        });\n\n        el.taxa.forEach(elm => {\n          this.service.getRecordBySearch(elm).subscribe((dta) => {\n            this.recordCountData = dta;\n            const count = this.recordCountData.totalRecords;\n            this.tableData.push({group: '\\t' +  elm, speciesCount: count});\n          });\n          });\n      });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource = new MapTableDataSource(this.tableData);\n      console.log('Datasource:');\n      console.log(this.dataSource);\n      this.dataSource.sort = this.sort;\n      this.table.dataSource = this.dataSource;\n\n\n    this.dataSource = new MapTableDataSource(this.tableData);\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface SpeciesMapTableItem {\n  species: string;\n  recordCount: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: SpeciesMapTableItem[] = [\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Butterfly', recordCount: '100'},\n  {species: 'Fish', recordCount: '39'},\n  {species: 'Fish', recordCount: '39'},\n  {species: 'Fish', recordCount: '39'},\n  {species: 'Fish', recordCount: '39'},\n  {species: 'Fish', recordCount: '39'},\n  {species: 'Fish', recordCount: '39'}\n];\n\n/**\n * Data source for the SpeciesMapTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class SpeciesMapTableDataSource extends DataSource<SpeciesMapTableItem> {\n  data: SpeciesMapTableItem[];\n  sort: MatSort;\n\n\n  constructor(private tableData: SpeciesMapTableItem[]) {\n    super();\n    this.data = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<SpeciesMapTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getSortedData([...this.data]);\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: SpeciesMapTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.species, b.species, isAsc);\n        case 'id': return compare(+a.recordCount, +b.recordCount, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n.map-table{\\n  width: 100%;\\n  margin-right: 0%;\\n  text-align: center;\\n  box-shadow: none;\\n  border-right: 1px solid #dee2e6;\\n  overflow-y: scroll;\\n  max-height: 700px;\\n}\\n\\nth {\\n  vertical-align: middle!important;\\n}\\n\\ntd {\\n  padding: 10px!important;\\n}\\n\\n.mat-row:hover {\\n  border-color: gray;\\n  background: rgb(161, 147, 147);\\n}\\n\\n.mat-row:active {\\n  background: rgb(161, 147, 147);\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL3NwZWNpZXMtbWFwLXRhYmxlL3NwZWNpZXMtbWFwLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvdGFibGVzL3NwZWNpZXMtbWFwLXRhYmxlL3NwZWNpZXMtbWFwLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aC10YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWFwLXRhYmxle1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXJpZ2h0OiAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3gtc2hhZG93OiBub25lO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGVlMmU2O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIG1heC1oZWlnaHQ6IDcwMHB4O1xufVxuXG50aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGUhaW1wb3J0YW50O1xufVxuXG50ZCB7XG4gIHBhZGRpbmc6IDEwcHghaW1wb3J0YW50O1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZDogcmdiKDE2MSwgMTQ3LCAxNDcpO1xufVxuXG4ubWF0LXJvdzphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiByZ2IoMTYxLCAxNDcsIDE0Nyk7XG59XG5cblxuIl19 */\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { SpeciesMapTableDataSource, SpeciesMapTableItem } from './species-map-table-datasource';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { MapTableItem } from '../map-table/map-table-datasource';\nimport { Species } from 'src/app/models/Species';\nimport { MapTableComponent } from '../map-table/map-table.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InteractionService } from 'src/app/services/interaction.service';\nimport { group } from '@angular/animations';\n\n@Component({\n  selector: 'app-species-map-table',\n  templateUrl: './species-map-table.component.html',\n  styleUrls: ['./species-map-table.component.css']\n})\nexport class SpeciesMapTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n  @ViewChild(MatTable, {static: false}) table: MatTable<SpeciesMapTableItem>;\n  dataSource: SpeciesMapTableDataSource;\n\n  constructor(private service: RecordReqService, private router: Router, private intService: InteractionService) { }\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['species', 'recordCount'];\n  tableData: SpeciesMapTableItem[] = [];\n\n  group = 'all';\n  speciesdata: any;\n  speciesList: Species[] = [];\n\n  ngOnInit() {\n    this.service.getTaxonRecords(this.group).subscribe((data) => {\n      // console.log(data);\n      this.speciesdata = data;\n\n      this.speciesdata.occurrences.forEach(element => {\n        const spec = new Species(element, 'SpeciesMapTable');\n        this.speciesList.push(spec);\n        this.fillTable(spec);\n      });\n\n      this.dataSource = new SpeciesMapTableDataSource(this.tableData);\n      this.dataSource.sort = this.sort;\n      this.table.dataSource = this.dataSource;\n    });\n\n    this.dataSource = new SpeciesMapTableDataSource(this.tableData);\n\n\n    this.intService.currentGroup.subscribe(\n      currGroup => {\n        this.groupChanged(currGroup);\n      });\n  }\n\n  groupChanged(currGroup) {\n    if (currGroup === 'Alle') {\n      currGroup = '*';\n    }\n    this.tableData = [];\n    this.speciesList = [];\n    this.service.getTaxonRecords(currGroup).subscribe((data) => {\n      this.speciesdata = data;\n\n      this.speciesdata.occurrences.forEach(element => {\n        const spec = new Species(element, 'SpeciesMapTable');\n        this.speciesList.push(spec);\n        this.fillTable(spec);\n      });\n\n      this.dataSource = new SpeciesMapTableDataSource(this.tableData);\n      this.dataSource.sort = this.sort;\n      this.table.dataSource = this.dataSource;\n    });\n\n    this.dataSource = new SpeciesMapTableDataSource(this.tableData);\n\n  }\n\n  ngAfterViewInit() {\n  }\n\n  fillTable(species) {\n    this.tableData.push({species: species.rawScientificName, recordCount: '1'});\n  }\n\n  onRowClicked(row, index) {\n    console.log(index);\n    this.router.navigate(['/profile', this.speciesList[index].uuid]);\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { ProfileComponent } from 'src/app/profile/profile.component';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\n\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProfileTableItem[] = [\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'},\n  {description: 'Data partner', value: 'Hydrogen'}\n];\n/**\n * Data source for the TaxonomyTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TaxonomyTableDataSource extends DataSource<ProfileTableItem> {\n  data: ProfileTableItem[] = EXAMPLE_DATA;\n  tabledata: ProfileTableItem[];\n\n  speciesdata: any;\n  species: Species;\n\n  constructor(private tableData: ProfileTableItem[]) {\n    super();\n    this.tableData = tableData;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProfileTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n\n    const dataMutations = [\n      observableOf(this.tableData)\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.tableData;\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n}\n","export default \".full-width-table {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGVzL3RheG9ub215LXRhYmxlL3RheG9ub215LXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC90YWJsZXMvdGF4b25vbXktdGFibGUvdGF4b25vbXktdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { TaxonomyTableDataSource} from './taxonomy-table-datasource';\nimport { ProfileTableItem } from 'src/app/models/ProfileTableItem';\nimport { Species } from 'src/app/models/Species';\nimport { RecordReqService } from 'src/app/services/record-req.service';\nimport { ProfileComponent } from 'src/app/profile/profile.component';\n\n@Component({\n  selector: 'app-taxonomy-table',\n  templateUrl: './taxonomy-table.component.html',\n  styleUrls: ['./taxonomy-table.component.css']\n})\nexport class TaxonomyTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatTable, {static: false}) table: MatTable<ProfileTableItem>;\n  dataSource: TaxonomyTableDataSource;\n  constructor(private service: RecordReqService, private data: ProfileComponent) { }\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['description', 'value'];\n  tableData: ProfileTableItem[];\n\n  uuid: any;\n  speciesdata: any;\n  species: Species;\n\n  ngOnInit() {\n    this.data.currentUuid.subscribe(uuid => this.uuid = uuid);\n    console.log('Empfangene Uuid:' + this.uuid);\n\n    this.service.getOneRecord(this.uuid).subscribe((data) => {\n      // console.log(data);\n      this.speciesdata = data;\n\n      const spec = new Species(this.speciesdata, 'taxTable');\n        this.species = spec;\n\n      this.tableData = fillTable(this.species);\n      this.dataSource = new TaxonomyTableDataSource(this.tableData);\n      console.log('Datasource:');\n      console.log(this.dataSource);\n      this.table.dataSource = this.dataSource;\n    });\n    this.dataSource = new TaxonomyTableDataSource(this.tableData);\n  }\n\n  ngAfterViewInit() {\n  }\n}\n\nfunction fillTable(species) {\n  const data: ProfileTableItem[] = [];\n\n  data.push({description: 'Wissenschaftlicher Name', value: species.scientificName});\n  data.push({description: 'Taxon-Rang',  value: species.taxonRank});\n  data.push({description: 'Gebräuchlicher Name',  value: species.vernacularName});\n  data.push({description: 'Reich',  value: species.kingdom});\n  data.push({description: 'Stamm',  value: species.phylum});\n  data.push({description: 'Klasse',  value: species.classID});\n  data.push({description: 'Ordnung',  value: species.order});\n  data.push({description: 'Familie',  value: species.family});\n  data.push({description: 'Gattung',  value: species.genus});\n  data.push({description: 'Spezies',  value: species.species});\n\n  return data;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}